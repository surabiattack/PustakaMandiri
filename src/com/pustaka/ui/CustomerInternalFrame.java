/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pustaka.ui;

import com.pustaka.model.Customer;
import com.pustaka.model.UserSession;
import com.pustaka.provider.ApplicationContextProvider;
import com.pustaka.service.CustomerService;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;

/**
 *
 * @author dwi
 */
public class CustomerInternalFrame extends javax.swing.JInternalFrame {

    private CustomerService customerService;
    private List<Customer> tempList = new ArrayList<Customer>();
    private boolean isEdit;
    private static CustomerInternalFrame myInstance;
    
    /**
     * Creates new form CustomerInternalFrame
     */
    public CustomerInternalFrame() {
        ApplicationContext appContext = ApplicationContextProvider.getInstance().getApplicationContext();
        customerService = (CustomerService) appContext.getBean("customerService");
        initComponents();
        setDisplayProdukTable();
        searchButtonActionPerformed(null);
    }
    
    public static CustomerInternalFrame getInstance(){
        if(myInstance == null){
            myInstance = new CustomerInternalFrame();
        }
        return myInstance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        namaTextField = new javax.swing.JTextField();
        alamatTextField = new javax.swing.JTextField();
        teleponTextField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        addProdukButton = new javax.swing.JButton();
        editProdukButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        closeProdukButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false; //Disallow the editing of any cell
            }
        };

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Customer");
        setPreferredSize(new java.awt.Dimension(920, 450));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        jLabel1.setText("Nama");

        jLabel2.setText("Alamat");

        jLabel3.setText("Telepon");

        namaTextField.setEnabled(false);

        alamatTextField.setEnabled(false);

        teleponTextField.setEnabled(false);

        cancelButton.setText("Cancel");
        cancelButton.setEnabled(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.setEnabled(false);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Search Anything ");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        addProdukButton.setText("Add");
        addProdukButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdukButtonActionPerformed(evt);
            }
        });

        editProdukButton.setText("Edit");
        editProdukButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProdukButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        closeProdukButton.setText("Close");
        closeProdukButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeProdukButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchTextField)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(namaTextField))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(20, 20, 20)
                .addComponent(alamatTextField))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(14, 14, 14)
                .addComponent(teleponTextField))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchButton))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(addProdukButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editProdukButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(closeProdukButton))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addProdukButton, closeProdukButton, deleteButton, editProdukButton});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, resetButton, saveButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(alamatTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(teleponTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton)
                    .addComponent(resetButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addProdukButton)
                    .addComponent(editProdukButton)
                    .addComponent(closeProdukButton)
                    .addComponent(deleteButton))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Data"));

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        customerTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(customerTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setDisplayProdukTableAfterSearch(){
//        tempList = customerService.getProdukList();
        Object data[][] = new Object[tempList.size()][10];
        int x = 0;
        for (Customer customer : tempList) {
            data[x][0] = customer.getCustomerId();
            data[x][1] = customer.getNama();
            data[x][2] = customer.getAlamat();
            data[x][3] = customer.getTelepon();
            ++x;
        }
        
        String[] judul = {"Id", "Nama", "Alamat", "Telepon"};
        customerTable.setModel(new DefaultTableModel(data, judul));
        jScrollPane1.setViewportView(customerTable);
        customerTable.setEnabled(true);
    }
    
    private void setDisplayProdukTable(){
        tempList = customerService.getCustomerList();
        Object data[][] = new Object[tempList.size()][10];
        int x = 0;
        for (Customer customer : tempList) {
            data[x][0] = customer.getCustomerId();
            data[x][1] = customer.getNama();
            data[x][2] = customer.getAlamat();
            data[x][3] = customer.getTelepon();
            ++x;
        }
        
        String[] judul = {"Id", "Nama", "Alamat", "Telepon"};
        customerTable.setModel(new DefaultTableModel(data, judul));
        jScrollPane1.setViewportView(customerTable);
        customerTable.setEnabled(true);
    }
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        setInputCustomer(Boolean.FALSE);
        setReset();
        addProdukButton.setEnabled(Boolean.TRUE);
        editProdukButton.setEnabled(Boolean.TRUE);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void setReset(){
        namaTextField.setText("");
        alamatTextField.setText("");
        teleponTextField.setText("");
    }
    
    private void setInputCustomer(boolean status){
        namaTextField.setEnabled(status);
        alamatTextField.setEnabled(status);
        teleponTextField.setEnabled(status);
        saveButton.setEnabled(status);
        cancelButton.setEnabled(status);
        resetButton.setEnabled(status);
    }
    
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        setReset();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if(isInputValid()){
            try{
                if(!isEdit){ // SAVE ENTITY PRODUK
                    Customer saveEntity = new Customer(namaTextField.getText(), alamatTextField.getText(),
                        teleponTextField.getText());

                    customerService.save(saveEntity, UserSession.getUsername());
                }else{      // UPDATE ENTITY PRODUK
                    Customer customer = tempList.get(customerTable.getSelectedRow());
                    
                    Customer customerFromDb = customerService.findById(customer.getCustomerId());
                            
                    customerFromDb.setNama(namaTextField.getText());
                    customerFromDb.setAlamat(alamatTextField.getText());
                    customerFromDb.setTelepon(teleponTextField.getText());

                    customerService.update(customerFromDb, UserSession.getUsername());
                }

                setInputCustomer(Boolean.FALSE);
                setReset();
                setDisplayProdukTable();
                isEdit = Boolean.FALSE;
                addProdukButton.setEnabled(Boolean.TRUE);
                editProdukButton.setEnabled(Boolean.TRUE);
                JOptionPane.showMessageDialog(this, "Saved successfully ", "Success", JOptionPane.INFORMATION_MESSAGE);

            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error " +e.getMessage() , "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private boolean isInputValid(){
        Boolean isValid = Boolean.TRUE;
        
        if(namaTextField.getText().isEmpty() || namaTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong" , "Error ", JOptionPane.ERROR_MESSAGE);
            isValid = Boolean.FALSE;
        }
        
        if(alamatTextField.getText().isEmpty() || alamatTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Alamat tidak boleh kosong" , "Error ", JOptionPane.ERROR_MESSAGE);
            isValid = Boolean.FALSE;
        }
        
        return isValid;
    }
    
    private void addProdukButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdukButtonActionPerformed
        // TODO add your handling code here:
        setInputCustomer(Boolean.TRUE);
        addProdukButton.setEnabled(Boolean.FALSE);
        editProdukButton.setEnabled(Boolean.FALSE);
    }//GEN-LAST:event_addProdukButtonActionPerformed

    private void editProdukButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProdukButtonActionPerformed
        // TODO add your handling code here:
        if(customerTable.getSelectedRow() >= 0){
            isEdit = Boolean.TRUE;
            setInputCustomer(Boolean.TRUE);
            customerTable.setEnabled(Boolean.FALSE);
            addProdukButton.setEnabled(Boolean.FALSE);
            editProdukButton.setEnabled(Boolean.FALSE);
            setFillTextField();
            namaTextField.requestFocusInWindow();
        }else{
            JOptionPane.showMessageDialog(this, "Pilih minimal row yang akan diedit" , "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editProdukButtonActionPerformed

    private void setFillTextField(){
        Customer customer = tempList.get(customerTable.getSelectedRow());
        namaTextField.setText(customer.getNama());
        alamatTextField.setText(customer.getAlamat());
        teleponTextField.setText(customer.getTelepon());
    }
    
    private void closeProdukButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeProdukButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeProdukButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Yakin data dihapus???","Warning",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            Customer customer = tempList.get(customerTable.getSelectedRow());
            customerService.delete(customer.getCustomerId());
            setDisplayProdukTable();
            JOptionPane.showMessageDialog(this, "Data telah dihapus" , "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        tempList = customerService.findBySearch(searchTextField.getText());
        setDisplayProdukTableAfterSearch();
        //        setDisplayProdukTable();
    }//GEN-LAST:event_searchButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProdukButton;
    private javax.swing.JTextField alamatTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton closeProdukButton;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editProdukButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namaTextField;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTextField teleponTextField;
    // End of variables declaration//GEN-END:variables

    public CustomerService getCustomerService() {
        return customerService;
    }

    public void setCustomerService(CustomerService customerService) {
        this.customerService = customerService;
    }

    public boolean isIsEdit() {
        return isEdit;
    }

    public void setIsEdit(boolean isEdit) {
        this.isEdit = isEdit;
    }

    public List<Customer> getTempList() {
        return tempList;
    }

    public void setTempList(List<Customer> tempList) {
        this.tempList = tempList;
    }

    public static CustomerInternalFrame getMyInstance() {
        return myInstance;
    }

    public static void setMyInstance(CustomerInternalFrame myInstance) {
        CustomerInternalFrame.myInstance = myInstance;
    }

}
