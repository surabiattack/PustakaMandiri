/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pustaka.ui;

import com.pustaka.common.ComboItem;
import com.pustaka.common.EmailValidator;
import com.pustaka.model.UserInternal;
import com.pustaka.model.UserSession;
import com.pustaka.provider.ApplicationContextProvider;
import com.pustaka.service.UserInternalService;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.context.ApplicationContext;

/**
 *
 * @author dwi
 */
public class UserInternalFrame extends javax.swing.JInternalFrame {

    private UserInternalService userInternalService;
    private static final String DATE_FORMAT = "dd-MMM-yyyy";
    private List<UserInternal> tempList = new ArrayList<UserInternal>();
    private boolean isEdit;
    private static UserInternalFrame myInstance;
    
    /**
     * Creates new form UserInternalFrame
     */
    public UserInternalFrame() {
        ApplicationContext appContext = ApplicationContextProvider.getInstance().getApplicationContext();
        userInternalService = (UserInternalService) appContext.getBean("userInternalService");
        initComponents();
        setDisplayUserTable();
        passwordLabelNotif.setVisible(false);
//        levelComboBox.removeAllItems();
        levelComboBox.addItem(new ComboItem("Admin", "ADMIN"));
        levelComboBox.addItem(new ComboItem("User", "USER"));
    }
    
    public static UserInternalFrame getInstance(){
        if(myInstance == null){
            myInstance = new UserInternalFrame();
        }
        return myInstance;
    }
    
    private void setDisplayUserTable(){
        tempList = userInternalService.getUserList();
        Object data[][] = new Object[tempList.size()][10];
        int x = 0;
        for (UserInternal userInternal : tempList) {
            data[x][0] = userInternal.getIdUser();
            data[x][1] = userInternal.getNama();
            data[x][2] = userInternal.getUsername();
            data[x][3] = userInternal.getPassword();
            data[x][4] = userInternal.getEmail();
            data[x][5] = userInternal.getLevel();
            ++x;
        }
        
        String[] judul = {"Id", "Nama", "Username", "Password", "Email", "Level"};
        userTable.setModel(new DefaultTableModel(data, judul));
        jScrollPane1.setViewportView(userTable);
        userTable.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        namaTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        levelComboBox = new javax.swing.JComboBox();
        passwordField = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        passwordLabelNotif = new javax.swing.JLabel();
        searchTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        addProdukButton = new javax.swing.JButton();
        editProdukButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        closeProdukButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false; //Disallow the editing of any cell
            }
        };

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("User");
        setPreferredSize(new java.awt.Dimension(920, 450));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Input"));

        jLabel1.setText("Nama");

        jLabel2.setText("Username");

        jLabel3.setText("Password");

        namaTextField.setEnabled(false);

        jLabel4.setText(":");

        jLabel5.setText(":");

        jLabel6.setText(":");

        usernameTextField.setEnabled(false);

        cancelButton.setText("Cancel");
        cancelButton.setEnabled(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.setEnabled(false);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Email");

        jLabel8.setText(":");

        jLabel9.setText("Level");

        jLabel10.setText(":");

        emailTextField.setEnabled(false);

        levelComboBox.setEnabled(false);

        passwordField.setEnabled(false);

        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*");

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("*");

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("*");

        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("*");

        passwordLabelNotif.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        passwordLabelNotif.setForeground(new java.awt.Color(255, 0, 0));
        passwordLabelNotif.setText("Kosong kan password jika tidak ingin diubah");

        jLabel11.setText("Search Anything :");

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        addProdukButton.setText("Add");
        addProdukButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProdukButtonActionPerformed(evt);
            }
        });

        editProdukButton.setText("Edit");
        editProdukButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProdukButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        closeProdukButton.setText("Close");
        closeProdukButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeProdukButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(passwordLabelNotif))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resetButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(emailTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(usernameTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(namaTextField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(levelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addProdukButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editProdukButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(closeProdukButton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addProdukButton, closeProdukButton, deleteButton, editProdukButton});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, resetButton, saveButton});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {emailTextField, namaTextField, passwordField, usernameTextField});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(namaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLabelNotif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(levelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(cancelButton)
                    .addComponent(resetButton))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addProdukButton)
                    .addComponent(editProdukButton)
                    .addComponent(closeProdukButton)
                    .addComponent(deleteButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Table Data"));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        userTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(userTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 574, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        setInputUser(Boolean.FALSE);
        setReset();
        addProdukButton.setEnabled(Boolean.TRUE);
        editProdukButton.setEnabled(Boolean.TRUE);
        passwordLabelNotif.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void setReset(){
        namaTextField.setText("");
        usernameTextField.setText("");
        passwordField.setText("");
        emailTextField.setText("");
        levelComboBox.setSelectedIndex(0);
    }
    
    private void setInputUser(boolean status){
        namaTextField.setEnabled(status);
        usernameTextField.setEnabled(status);
        passwordField.setEnabled(status);
        emailTextField.setEnabled(status);
        levelComboBox.setEnabled(status);
        saveButton.setEnabled(status);
        cancelButton.setEnabled(status);
        resetButton.setEnabled(status);
    }
    
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
        setReset();
    }//GEN-LAST:event_resetButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if(isInputValid()){
            String passText = null;
            String md5Password = null;
            if(passwordField.getPassword()!= null && passwordField.getPassword().length > 0){
                passText = new String(passwordField.getPassword());
                md5Password = getMD5(passText);
            }
            
            try{
                if(!isEdit){ // SAVE ENTITY PRODUK
                    ComboItem item = (ComboItem) levelComboBox.getSelectedItem();
                    UserInternal saveEntity = new UserInternal(namaTextField.getText(), usernameTextField.getText(),
                        md5Password,emailTextField.getText(),item.getValue());

                    userInternalService.save(saveEntity, UserSession.getUsername());
                }else{      // UPDATE ENTITY PRODUK
                    UserInternal userInternal = tempList.get(userTable.getSelectedRow());
                    
                    UserInternal userInternalFromDb = userInternalService.findById(userInternal.getIdUser());
                    userInternalFromDb.setNama(namaTextField.getText());
                    userInternalFromDb.setUsername(usernameTextField.getText());
                    if(passwordField.getPassword() != null && passwordField.getPassword().length > 0) {
                        userInternalFromDb.setPassword(md5Password);
                    }
                    userInternalFromDb.setEmail(emailTextField.getText());
//                    userInternal.setLevel(levelComboBox.getName());
                    ComboItem item = (ComboItem)levelComboBox.getSelectedItem();
                    userInternalFromDb.setLevel(item.getValue());
                    userInternalService.update(userInternalFromDb, UserSession.getUsername());
                    passwordLabelNotif.setVisible(true);
                }

                setInputUser(Boolean.FALSE);
                setReset();
                setDisplayUserTable();
                isEdit = Boolean.FALSE;
                searchTextField.requestFocusInWindow();
                addProdukButton.setEnabled(Boolean.TRUE);
                editProdukButton.setEnabled(Boolean.TRUE);
                JOptionPane.showMessageDialog(this, "Saved successfully ", "Success", JOptionPane.INFORMATION_MESSAGE);

            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error " +e.getMessage() , "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private String getMD5(String password){
        //convert the byte to hex format method 1
        StringBuilder sb = new StringBuilder();
        
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(password.getBytes());
            
            byte byteData[] = md.digest();
            
            for (int i = 0; i < byteData.length; i++) {
             sb.append(Integer.toString((byteData[i] & 0xff) + 0x100, 16).substring(1));
            }
            
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return sb.toString();
    }
    
    private boolean isInputValid(){
        Boolean isValid = Boolean.TRUE;
        
        EmailValidator ev= new EmailValidator();
        
        if(namaTextField.getText().isEmpty() || namaTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong" , "Error ", JOptionPane.ERROR_MESSAGE);
            isValid = Boolean.FALSE;
        }
        
        if(usernameTextField.getText().isEmpty() || usernameTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Username tidak boleh kosong" , "Error ", JOptionPane.ERROR_MESSAGE);
            isValid = Boolean.FALSE;
        }
        
        if(!isEdit){
            if(passwordField.getPassword() == null || passwordField.getPassword().length < 1){
                JOptionPane.showMessageDialog(this, "Password tidak boleh kosong" , "Error ", JOptionPane.ERROR_MESSAGE);
                isValid = Boolean.FALSE;
            }
        }
        
        if(!ev.validate(emailTextField.getText())){
            JOptionPane.showMessageDialog(this, "Format email salah" , "Error ", JOptionPane.ERROR_MESSAGE);
            isValid = Boolean.FALSE;
        }
        
        return isValid;
    }
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        tempList = userInternalService.findBySearch(searchTextField.getText());
        setDisplayUserTableAfterSearch();
        //        setDisplayProdukTable();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void setDisplayUserTableAfterSearch(){
//        tempList = customerService.getProdukList();
        Object data[][] = new Object[tempList.size()][10];
        int x = 0;
        for (UserInternal userInternal : tempList) {
            data[x][0] = userInternal.getIdUser();
            data[x][1] = userInternal.getNama();
            data[x][2] = userInternal.getUsername();
            data[x][3] = userInternal.getPassword();
            data[x][4] = userInternal.getEmail();
            data[x][5] = userInternal.getLevel();
            ++x;
        }
        
        String[] judul = {"Id", "Nama", "Username", "Password", "Email", "Level"};
        userTable.setModel(new DefaultTableModel(data, judul));
        jScrollPane1.setViewportView(userTable);
        userTable.setEnabled(true);
    }
    
    private void closeProdukButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeProdukButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeProdukButtonActionPerformed

    private void editProdukButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProdukButtonActionPerformed
        // TODO add your handling code here:
        if(userTable.getSelectedRow() >= 0){
            isEdit = Boolean.TRUE;
            passwordLabelNotif.setVisible(true);
            setInputUser(Boolean.TRUE);
            userTable.setEnabled(Boolean.FALSE);
            addProdukButton.setEnabled(Boolean.FALSE);
            editProdukButton.setEnabled(Boolean.FALSE);
            setFillTextField();
            namaTextField.requestFocusInWindow();
        }else{
            JOptionPane.showMessageDialog(this, "Pilih minimal row yang akan diedit" , "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_editProdukButtonActionPerformed

    private void setFillTextField(){
        UserInternal userInternal = tempList.get(userTable.getSelectedRow());
        namaTextField.setText(userInternal.getNama());
        usernameTextField.setText(userInternal.getUsername());
//        passwordField.setText(userInternal.getPassword());
        emailTextField.setText(userInternal.getEmail());
        levelComboBox.setSelectedItem(ComboItem.setSelectedValue(levelComboBox, userInternal.getLevel()));
    }
    
    private void addProdukButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProdukButtonActionPerformed
        // TODO add your handling code here:
        setInputUser(Boolean.TRUE);
        addProdukButton.setEnabled(Boolean.FALSE);
        editProdukButton.setEnabled(Boolean.FALSE);
    }//GEN-LAST:event_addProdukButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
         // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(null, "Yakin data dihapus???","Warning",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            UserInternal user = tempList.get(userTable.getSelectedRow());
            userInternalService.delete(user.getIdUser());
            setDisplayUserTable();
            JOptionPane.showMessageDialog(this, "Data telah dihapus" , "Info", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProdukButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton closeProdukButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editProdukButton;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox levelComboBox;
    private javax.swing.JTextField namaTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JLabel passwordLabelNotif;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchTextField;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables

    public UserInternalService getUserInternalService() {
        return userInternalService;
    }

    public void setUserInternalService(UserInternalService userInternalService) {
        this.userInternalService = userInternalService;
    }

    public List<UserInternal> getTempList() {
        return tempList;
    }

    public void setTempList(List<UserInternal> tempList) {
        this.tempList = tempList;
    }

    public boolean isIsEdit() {
        return isEdit;
    }

    public void setIsEdit(boolean isEdit) {
        this.isEdit = isEdit;
    }

    public static UserInternalFrame getMyInstance() {
        return myInstance;
    }

    public static void setMyInstance(UserInternalFrame myInstance) {
        UserInternalFrame.myInstance = myInstance;
    }

}
