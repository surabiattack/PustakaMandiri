/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pustaka.report;

import com.pustaka.common.ComboItem;
import com.pustaka.common.CommonConstant;
import com.pustaka.common.NumberFormat;
import com.pustaka.common.TableColumnAdjuster;
import com.pustaka.model.Customer;
import com.pustaka.model.Orders;
import com.pustaka.model.Pembayaran;
import com.pustaka.model.UserSession;
import com.pustaka.provider.ApplicationContextProvider;
import com.pustaka.service.CustomerService;
import com.pustaka.service.OrdersService;
import com.pustaka.service.PembayaranService;
import com.pustaka.service.ProdukService;
import com.pustaka.ui.MainFrame;
import com.pustaka.vo.CustomerVo;
import com.pustaka.vo.ReportPiutangByCustomerVo;
import com.pustaka.vo.ReportPiutangByFakturVo;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.InputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import org.springframework.context.ApplicationContext;

/**
 *
 * @author dwi
 */
public class ReportPiutang extends javax.swing.JInternalFrame implements ItemListener{
    
    private CustomerService customerService;
    private ProdukService produkService;
    private OrdersService ordersService;
    private PembayaranService pembayaranService;
    private List<Customer> customerList = new ArrayList<Customer>();
    private List<Orders> ordersList = new ArrayList<Orders>();
    private List<ReportPiutangByCustomerVo> voCustomer = new ArrayList<ReportPiutangByCustomerVo>();
    private List<ReportPiutangByFakturVo> voFaktur = new ArrayList<ReportPiutangByFakturVo>();
    private SimpleDateFormat sdf = new SimpleDateFormat(CommonConstant.MYSQL_DATE_FORMAT);
    private SimpleDateFormat sdfForDisplay = new SimpleDateFormat(CommonConstant.DATE_FORMAT);
    private boolean izin;
    private static ReportPiutang myInstance;
    public String jumlahBayar;

    /**
     * Creates new form ReportPiutang
     */
    public ReportPiutang() {
        ApplicationContext appContext = ApplicationContextProvider.getInstance().getApplicationContext();
        customerService = (CustomerService) appContext.getBean("customerService");
        produkService = (ProdukService) appContext.getBean("produkService");
        ordersService = (OrdersService) appContext.getBean("ordersService");
        pembayaranService = (PembayaranService) appContext.getBean("pembayaranService");
        initComponents();
        fakturRadioButton.addItemListener(this);
        customerRadioButton.addItemListener(this);
        tahunCombobox();
        lunasButton.setVisible(false);
        jLabel5.setVisible(false);
        totalTextField.setVisible(false);
    }

    public static ReportPiutang getInstance(){
        if(myInstance == null){
            myInstance = new ReportPiutang();
        }
        return myInstance;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseButtonGroup = new javax.swing.ButtonGroup();
        passwordDialog = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fakturRadioButton = new javax.swing.JRadioButton();
        customerRadioButton = new javax.swing.JRadioButton();
        chooseComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportPiutangTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false; //Disallow the editing of any cell
            }
        };
        jLabel5 = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();
        printButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        lunasButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        tahunComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        jLabel6.setText("Password");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout passwordDialogLayout = new javax.swing.GroupLayout(passwordDialog.getContentPane());
        passwordDialog.getContentPane().setLayout(passwordDialogLayout);
        passwordDialogLayout.setHorizontalGroup(
            passwordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        passwordDialogLayout.setVerticalGroup(
            passwordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(passwordDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(1000, 600));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Catatan Pembayaran");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Pilih Berdasarkan :");

        chooseButtonGroup.add(fakturRadioButton);
        fakturRadioButton.setText("Faktur");

        chooseButtonGroup.add(customerRadioButton);
        customerRadioButton.setText("Customers");

        chooseComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        reportPiutangTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(reportPiutangTable);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Total");

        totalTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        lunasButton.setMnemonic('n');
        lunasButton.setText("Bayar");
        lunasButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lunasButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Lihat");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        tahunComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Tahun");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chooseComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(fakturRadioButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(customerRadioButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(searchButton)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tahunComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lunasButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(jLabel1)
                        .addGap(0, 450, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closeButton, printButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tahunComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fakturRadioButton)
                        .addComponent(customerRadioButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lunasButton))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        ComboItem item = (ComboItem)chooseComboBox.getSelectedItem();
        ComboItem tahun = (ComboItem)tahunComboBox.getSelectedItem();
        String value = item.getValue();

        if(fakturRadioButton.isSelected()){
            voFaktur = ordersService.getReportPiutangByFakturList(Integer.valueOf(value), tahun.getValue());
            setTableReportPiutangByFaktur(voFaktur);
        }else{
            voCustomer = ordersService.getReportPiutangByCustomerList(Integer.valueOf(value), tahun.getValue());
            setTableReportPiutangByCustomer(voCustomer);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    
    private void tahunCombobox(){
        int year = Calendar.getInstance().get(Calendar.YEAR);
        for(int i = 0 ;i < 5; i++){
            tahunComboBox.addItem(new ComboItem(String.valueOf(year+i),String.valueOf(year+i)));
        }
    }
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
         // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void lunasButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lunasButtonActionPerformed
        // TODO add your handling code here:
        jumlahBayar = JOptionPane.showInputDialog("Rp.");
        passwordDialog.setSize(280,100);
        passwordDialog.setVisible(true);
        passwordDialog.setLocationRelativeTo(null);
    }//GEN-LAST:event_lunasButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        // TODO add your handling code here:
        ComboItem item = (ComboItem)chooseComboBox.getSelectedItem();
        ComboItem tahun = (ComboItem)tahunComboBox.getSelectedItem();
        String value = item.getValue();
        Locale locale = new Locale("id","ID");
        Map<String,Object> param = new HashMap<String, Object>();
        JasperReport jr = null;
        Long totalBayar = 0L;
        Long totalTagihan = 0L;
        Long sisa = 0L;
        //get total  bayar
        for(ReportPiutangByCustomerVo cvo : voCustomer){
            int id = cvo.getKodeFaktur();
            totalTagihan = totalTagihan + cvo.getNetto();
            List<Pembayaran> listBayar = pembayaranService.getListPembayaranByOrder(id);
            for(Pembayaran vo : listBayar){
                totalBayar = totalBayar + vo.getBayar();
            }
        }
        sisa = totalTagihan - totalBayar; 
        param.put("TAHUN", tahun.getValue());
        param.put("TOTAL_BAYAR", totalBayar);
        param.put("TOTAL_TAGIHAN", totalTagihan);
        param.put("SISA", sisa);
        param.put(JRParameter.REPORT_LOCALE, locale);
        try {
            if(fakturRadioButton.isSelected()){
                param.put("ID_ORDERS", Integer.valueOf(value));
//                jr = JasperCompileManager.compileReport("D:\\Report\\ReportPiutangByFaktur.jrxml");
                InputStream jasperStream = getClass().getResourceAsStream("/Report/ReportCatatanPembayaran.jasper");
                jr = (JasperReport) JRLoader.loadObject(jasperStream);
            }
            else{
                param.put("ID_CUSTOMER", Integer.valueOf(value));
//                jr = JasperCompileManager.compileReport("D:\\Report\\ReportPiutangByCustomer.jrxml");
                InputStream jasperStream = getClass().getResourceAsStream("/Report/ReportCatatanPembayaranCustomer.jasper");
                jr = (JasperReport) JRLoader.loadObject(jasperStream);
            }
            JasperPrint print = JasperFillManager.fillReport(jr, param, ordersService.getConnection());
            //            JasperViewer.viewReport(print, false);
            JasperPrintManager.printReport(print, true);
        } catch (JRException ex) {
            Logger.getLogger(ReportPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String passText = new String(password.getPassword());
        String md5Password = getMD5(passText);
        try{
            if(md5Password.equals(UserSession.getPassword())){
                int result = JOptionPane.showConfirmDialog(null, "Data akan tersimpan dalam database, Yakin data disimpan?","Warning",JOptionPane.YES_NO_OPTION);
                if(result == JOptionPane.YES_OPTION){
                    ComboItem item = (ComboItem)chooseComboBox.getSelectedItem();
                    ComboItem tahun = (ComboItem)tahunComboBox.getSelectedItem();
                    if(!fakturRadioButton.isSelected()){
                        ReportPiutangByCustomerVo vo = voCustomer.get(reportPiutangTable.getSelectedRow());
                        Orders o = ordersService.findById(vo.getKodeFaktur());
                        Long sisa = vo.getSisa() - Long.valueOf(jumlahBayar);
                        Pembayaran bayar = new Pembayaran();
                        bayar.setBayar(Long.valueOf(jumlahBayar));
                        bayar.setOrders(o);
                        bayar.setTglBayar(new Date());
                        bayar.setSisa(sisa);
                        reportPiutangTable.setValueAt(NumberFormat.getInstance().formatNumber(Long.valueOf(jumlahBayar)), reportPiutangTable.getSelectedRow(), 2);
                        reportPiutangTable.setValueAt(NumberFormat.getInstance().formatNumber(sisa), reportPiutangTable.getSelectedRow(), 3);
                        pembayaranService.save(bayar, UserSession.getUsername());
                        if(sisa == 0){
                            o.setStatus(Orders.LUNAS);
                            ordersService.update(o, UserSession.getUsername());
                            reportPiutangTable.setValueAt(Orders.LUNAS, reportPiutangTable.getSelectedRow(), 4);
                        }
                        voCustomer = ordersService.getReportPiutangByCustomerList(Integer.valueOf(item.getValue()), tahun.getValue());
                        setTableReportPiutangByCustomer(voCustomer);
                    }
                    
                }
                
                JOptionPane.showMessageDialog(this, "Order telah dilunasi","Info",JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Kesalahan Password!");
            }
            passwordDialog.setVisible(false);
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }finally{
            jumlahBayar = "";
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    private String getMD5(String password){
        //convert the byte to hex format method 1
        StringBuilder sb = new StringBuilder();
        
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(password.getBytes());
            
            byte byteData[] = md.digest();
            
            for (int i = 0; i < byteData.length; i++) {
             sb.append(Integer.toString((byteData[i] & 0xff) + 0x100, 16).substring(1));
            }
            
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return sb.toString();
    }
    
    private void setTableReportPiutangByFaktur(List<ReportPiutangByFakturVo> voFaktur){
        Object data[][] = new Object[voFaktur.size()][10];
        int x = 0;
        Long total = 0l;
        for (ReportPiutangByFakturVo temp : voFaktur) {
            data[x][0] = sdfForDisplay.format(temp.getTglOrder());
            data[x][1] = temp.getNamaCustomer();
            data[x][2] = temp.getProduk();
            data[x][3] = temp.getStatus();
            data[x][4] = temp.getJumlah();
            data[x][5] = NumberFormat.getInstance().formatNumber(temp.getSubTotal());
            total = total + temp.getSubTotal();
            ++x;
        }
        totalTextField.setText(NumberFormat.getInstance().formatNumber(total));
        String[] judul = {"Tgl Order", "Customer","Produk","Status","Qty","Harga"};
        reportPiutangTable.setModel(new DefaultTableModel(data, judul));
        
        DefaultTableCellRenderer subTotalRightRenderer = new DefaultTableCellRenderer();
        subTotalRightRenderer.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        DefaultTableCellRenderer dateCenterRenderer = new DefaultTableCellRenderer();
        dateCenterRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        
        reportPiutangTable.getColumn("Harga").setCellRenderer(subTotalRightRenderer);
        reportPiutangTable.getColumn("Tgl Order").setCellRenderer(dateCenterRenderer);
        
        TableColumnAdjuster tca = new TableColumnAdjuster(reportPiutangTable);
        tca.adjustColumns();
        
        jScrollPane1.setViewportView(reportPiutangTable);
        reportPiutangTable.setEnabled(true);
    }
    
    private void setTableReportPiutangByCustomer(List<ReportPiutangByCustomerVo> vo){
        Object data[][] = new Object[vo.size()][10];
        int x = 0;
        Long total = 0l;
        for (ReportPiutangByCustomerVo temp : vo) {
            data[x][0] = temp.getKodeFaktur();
            data[x][1] = sdfForDisplay.format(temp.getTglOrder());
            data[x][2] = NumberFormat.getInstance().formatNumber(temp.getBayar());
            data[x][3] = NumberFormat.getInstance().formatNumber(temp.getSisa());
            data[x][4] = temp.getStatus();
//            data[x][5] = NumberFormat.getInstance().formatNumber(temp.getNetto());
            total = total + temp.getNetto();
            ++x;
        }
        
        totalTextField.setText(NumberFormat.getInstance().formatNumber(total));
//                String[] judul = {"No Faktur", "Tgl Order", "Status" , "Subtotal"};
         String[] judul = {"No Faktur", "Tgl Order","Bayar","Sisa", "Status"};
        reportPiutangTable.setModel(new DefaultTableModel(data, judul));
        
        DefaultTableCellRenderer subTotalRightRenderer = new DefaultTableCellRenderer();
        subTotalRightRenderer.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        DefaultTableCellRenderer dateCenterRenderer = new DefaultTableCellRenderer();
        dateCenterRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        
//        reportPiutangTable.getColumn("Subtotal").setCellRenderer(subTotalRightRenderer);
//        reportPiutangTable.getColumn("Bayar").setCellRenderer(subTotalRightRenderer);
//        reportPiutangTable.getColumn("Sisa").setCellRenderer(subTotalRightRenderer);
        TableColumnAdjuster tca = new TableColumnAdjuster(reportPiutangTable);
        tca.adjustColumns();
        jScrollPane1.setViewportView(reportPiutangTable);
        reportPiutangTable.setEnabled(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup chooseButtonGroup;
    private javax.swing.JComboBox chooseComboBox;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton customerRadioButton;
    private javax.swing.JRadioButton fakturRadioButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lunasButton;
    private javax.swing.JPasswordField password;
    private javax.swing.JDialog passwordDialog;
    private javax.swing.JButton printButton;
    private javax.swing.JTable reportPiutangTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox tahunComboBox;
    private javax.swing.JTextField totalTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent e) {
        totalTextField.setText(null);
        if(e.getStateChange() == ItemEvent.SELECTED){
            if(fakturRadioButton.isSelected()){
                chooseComboBox.removeAllItems();
                setComboBasedFaktur();
                lunasButton.setEnabled(false);
            }else{
                chooseComboBox.removeAllItems();
                setComboBasedCustomer();
                lunasButton.setEnabled(true);
            }
        }
    }
    
    private void setComboBasedFaktur(){
        ordersList = ordersService.getOrderList();
        
        for(Orders order : ordersList){
            chooseComboBox.addItem(new ComboItem(String.valueOf(order.getIdOrders()),String.valueOf(order.getIdOrders())));
        }
    }
    
    private void setComboBasedCustomer(){
        customerList = customerService.getCustomerList();
        
        for(Customer cus : customerList){
            chooseComboBox.addItem(new ComboItem(cus.getNama(), String.valueOf(cus.getCustomerId())));
        }
    }

}
