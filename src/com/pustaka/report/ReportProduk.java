/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pustaka.report;

import com.pustaka.common.ComboItem;
import com.pustaka.common.CommonConstant;
import com.pustaka.common.NumberFormat;
import com.pustaka.model.Customer;
import com.pustaka.model.Orders;
import com.pustaka.model.Pembayaran;
import com.pustaka.provider.ApplicationContextProvider;
import com.pustaka.service.CustomerService;
import com.pustaka.service.OrdersService;
import com.pustaka.service.PembayaranService;
import com.pustaka.service.ProdukService;
import com.pustaka.vo.ProdukVo;
import com.pustaka.vo.ReportPiutangByCustomerVo;
import com.pustaka.vo.ReportProdukVo;
import java.awt.Dimension;
import java.io.File;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import org.springframework.context.ApplicationContext;

/**
 *
 * @author dwi
 */
public class ReportProduk extends javax.swing.JInternalFrame{
    
    private CustomerService customerService;
    private ProdukService produkService;
    private OrdersService ordersService;
    private PembayaranService pembayaranService;
    private List<Customer> customerList = new ArrayList<Customer>();
    private List<Orders> ordersList = new ArrayList<Orders>();
    private SimpleDateFormat sdf = new SimpleDateFormat(CommonConstant.MYSQL_DATE_FORMAT);
    private SimpleDateFormat sdfForDisplay = new SimpleDateFormat(CommonConstant.DATE_FORMAT);
    private boolean izin;
    private static ReportProduk myInstance;
    public String jumlahBayar;
    public List<ProdukVo> produkVo;
    Long totalHarga = 0L;
    Long totalQtyProd = 0L;
    Long totalJmlProd = 0L;
    Long totalQtyPjl = 0L;
    Long totalJmlPjl = 0L;
    Long totalQtyStok = 0L;
    Long totalJmlStok = 0L;

    /**
     * Creates new form ReportPiutang
     */
    public ReportProduk() {
        ApplicationContext appContext = ApplicationContextProvider.getInstance().getApplicationContext();
        produkService = (ProdukService) appContext.getBean("produkService");
        ordersService = (OrdersService) appContext.getBean("ordersService");
        pembayaranService = (PembayaranService) appContext.getBean("pembayaranService");
        produkVo = produkService.getAllProductForVo();
        
        initComponents();
        setTableReportProdukByFaktur(produkVo);
    }

    public static ReportProduk getInstance(){
        if(myInstance == null){
            myInstance = new ReportProduk();
        }
        return myInstance;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        printButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableProduk = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false; //Disallow the editing of any cell
            }
        };
        jScrollPane1 = new javax.swing.JScrollPane();
        totalTable = new javax.swing.JTable();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(1000, 600));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Data Produk");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Total");

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        tableProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableProduk);

        totalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        totalTable.setShowHorizontalLines(false);
        totalTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(totalTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(465, 465, 465)
                    .addComponent(jLabel1))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(printButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(closeButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel5)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(printButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
         // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        try {
            // TODO add your handling code here:
            Locale locale = new Locale("id","ID");
            Map<String,Object> param = new HashMap<String, Object>();
            JasperReport jr = null;
            param.put("TOTAL_HARGA", totalHarga);
            param.put("TOTAL_QTY_PROD", totalQtyProd);
            param.put("TOTAL_JML_PROD", totalJmlProd);
            param.put("TOTAL_QTY_PJL", totalQtyPjl);
            param.put("TOTAL_JML_PJL", totalJmlPjl);
            param.put("TOTAL_QTY_STOK", totalQtyStok);
            param.put("TOTAL_JML_STOK", totalJmlStok);
//            param.put("SUBREPORT_DIR", "");
            param.put(JRParameter.REPORT_LOCALE, locale);
    //                jr = JasperCompileManager.compileReport("D:\\Report\\ReportPiutangByFaktur.jrxml");
                    InputStream jasperStream = getClass().getResourceAsStream("/Report/ReportProduk.jasper");
                    jr = (JasperReport) JRLoader.loadObject(jasperStream);
                JasperPrint print = JasperFillManager.fillReport(jr, param, ordersService.getConnection());
                //            JasperViewer.viewReport(print, false);
                JasperPrintManager.printReport(print, true);
        } catch (JRException ex) {
            Logger.getLogger(ReportProduk.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void setTableReportProdukByFaktur(List<ProdukVo> vo){
        Object data[][] = new Object[vo.size()][10];
        Object dataTotal[][] = new Object[10][10];
        int x = 0;
        for (ProdukVo temp : vo) {
            ReportProdukVo voProduksi = produkService.getProdukForReport(temp.getKodeProduk(),"produksi");
            ReportProdukVo voPenjualan = produkService.getProdukForReport(temp.getKodeProduk(),"penjualan");
            ReportProdukVo voStok = produkService.getProdukForReport(temp.getKodeProduk(),"stok");
            data[x][0] = temp.getKodeProduk(); // kolom 1
            data[x][1] = temp.getNamaProduk();
            data[x][2] = NumberFormat.getInstance().formatNumber(temp.getHarga());
            data[x][3] = NumberFormat.getInstance().formatNumber(voProduksi.getQty());
            data[x][4] = NumberFormat.getInstance().formatNumber(voProduksi.getJumlah());
            data[x][5] = NumberFormat.getInstance().formatNumber(voPenjualan.getQty());
            data[x][6] = NumberFormat.getInstance().formatNumber(voPenjualan.getJumlah());
            data[x][7] = NumberFormat.getInstance().formatNumber(voStok.getQty());
            data[x][8] = NumberFormat.getInstance().formatNumber(voStok.getJumlah());
            totalHarga += temp.getHarga();
            totalQtyProd += voProduksi.getQty();
            totalJmlProd += voProduksi.getJumlah();
            totalQtyPjl += voPenjualan.getQty();
            totalJmlPjl += voPenjualan.getJumlah();
            totalQtyStok += voStok.getQty();
            totalJmlStok += voStok.getJumlah();
            ++x;
        }
        String[] judul = {"Kode Produk", "Nama Produk","Harga","Qty Produksi","Jumlah Produksi","Qty Penjualan","Jumlah Penjualan","Qty Stok","Jumlah Stok"};
        tableProduk.setModel(new DefaultTableModel(data, judul));
        
        DefaultTableCellRenderer subTotalRightRenderer = new DefaultTableCellRenderer();
        subTotalRightRenderer.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        DefaultTableCellRenderer dateCenterRenderer = new DefaultTableCellRenderer();
        dateCenterRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        
        tableProduk.getColumn("Harga").setCellRenderer(subTotalRightRenderer);
        tableProduk.getColumn("Jumlah Produksi").setCellRenderer(subTotalRightRenderer);
        tableProduk.getColumn("Qty Produksi").setCellRenderer(subTotalRightRenderer);
        tableProduk.getColumn("Jumlah Penjualan").setCellRenderer(subTotalRightRenderer);
        tableProduk.getColumn("Qty Penjualan").setCellRenderer(subTotalRightRenderer);
        tableProduk.getColumn("Jumlah Stok").setCellRenderer(subTotalRightRenderer);
        tableProduk.getColumn("Qty Stok").setCellRenderer(subTotalRightRenderer);
        TableColumn columnA = tableProduk.getColumn("Kode Produk");
        columnA.setMinWidth(90);
        columnA.setMaxWidth(90);
        TableColumn columnB = tableProduk.getColumn("Nama Produk");
        columnB.setMinWidth(250);
        columnB.setMaxWidth(250);
        TableColumn columnC = tableProduk.getColumn("Harga");
        columnC.setMinWidth(90);
        columnC.setMaxWidth(90);
        TableColumn columnD = tableProduk.getColumn("Jumlah Produksi");
        columnD.setMinWidth(140);
        columnD.setMaxWidth(140);
        TableColumn columnE = tableProduk.getColumn("Qty Penjualan");
        columnE.setMinWidth(90);
        columnE.setMaxWidth(90);
        TableColumn columnF = tableProduk.getColumn("Jumlah Penjualan");
        columnF.setMinWidth(150);
        columnF.setMaxWidth(150);
        TableColumn columnG = tableProduk.getColumn("Jumlah Stok");
        columnG.setMinWidth(140);
        columnG.setMaxWidth(140);
        TableColumn columnH = tableProduk.getColumn("Qty Produksi");
        columnH.setMinWidth(90);
        columnH.setMaxWidth(90);
        TableColumn columnI = tableProduk.getColumn("Qty Stok");
        columnI.setMinWidth(90);
        columnI.setMaxWidth(90);
//        TableColumnAdjuster tca = new TableColumnAdjuster(tableProduk);
//        tca.adjustColumns();
        
        jScrollPane2.setViewportView(tableProduk);
        tableProduk.setEnabled(true);
        
        
        dataTotal[0][0] = NumberFormat.getInstance().formatNumber(totalHarga);
        dataTotal[0][1] = NumberFormat.getInstance().formatNumber(totalQtyProd);
        dataTotal[0][2] = NumberFormat.getInstance().formatNumber(totalJmlProd);
        dataTotal[0][3] = NumberFormat.getInstance().formatNumber(totalQtyPjl);
        dataTotal[0][4] = NumberFormat.getInstance().formatNumber(totalJmlPjl);
        dataTotal[0][5] = NumberFormat.getInstance().formatNumber(totalQtyStok);
        dataTotal[0][6] = NumberFormat.getInstance().formatNumber(totalJmlStok);
        String[] judulTotal = {"1", "2","3","4","5","6","7"};
        
        totalTable.setModel(new DefaultTableModel(dataTotal, judulTotal));
        for(int i=1; i<=7 ; i++){
            totalTable.getColumn(""+i+"").setCellRenderer(subTotalRightRenderer);
        }
        TableColumn columnC1 = totalTable.getColumn("1");
        columnC1.setMinWidth(90);
        columnC1.setMaxWidth(90);
        TableColumn columnJ1 = totalTable.getColumn("2");
        columnJ1.setMinWidth(90);
        columnJ1.setMaxWidth(90);
        TableColumn columnD1 = totalTable.getColumn("3");
        columnD1.setMinWidth(140);
        columnD1.setMaxWidth(140);
        TableColumn columnE1 = totalTable.getColumn("4");
        columnE1.setMinWidth(90);
        columnE1.setMaxWidth(90);
        TableColumn columnF1 = totalTable.getColumn("5");
        columnF1.setMinWidth(150);
        columnF1.setMaxWidth(150);
        TableColumn columnG1 = totalTable.getColumn("6");
        columnG1.setMinWidth(90);
        columnG1.setMaxWidth(90);
        TableColumn columnH1 = totalTable.getColumn("7");
        columnH1.setMinWidth(140);
        columnH1.setMaxWidth(140);
        jScrollPane1.setViewportView(totalTable);
        jScrollPane1.getVerticalScrollBar().setPreferredSize(new Dimension(0,0));
        totalTable.setTableHeader(null);
        
        totalTable.setEnabled(true);
        tableProduk.getColumnModel().getColumn(0).setPreferredWidth(500);
    }
    
    private void setColumnWidth(int min, int max){
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton printButton;
    private javax.swing.JTable tableProduk;
    private javax.swing.JTable totalTable;
    // End of variables declaration//GEN-END:variables

    public List<ProdukVo> getProdukVo() {
        return produkVo;
    }

    public void setProdukVo(List<ProdukVo> produkVo) {
        this.produkVo = produkVo;
    }

}
