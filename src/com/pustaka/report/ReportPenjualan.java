/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pustaka.report;

import com.pustaka.common.ComboItem;
import com.pustaka.common.CommonConstant;
import com.pustaka.common.NumberFormat;
import com.pustaka.common.TableColumnAdjuster;
import com.pustaka.model.Customer;
import com.pustaka.model.Produk;
import com.pustaka.provider.ApplicationContextProvider;
import com.pustaka.service.CustomerService;
import com.pustaka.service.OrdersService;
import com.pustaka.service.ProdukService;
import com.pustaka.vo.ReportPenjualanByCustomerVo;
import com.pustaka.vo.ReportPenjualanByProdukVo;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRParameter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import org.springframework.context.ApplicationContext;

/**
 *
 * @author dwi
 */
public class ReportPenjualan extends javax.swing.JInternalFrame implements ItemListener{
    
    private CustomerService customerService;
    private ProdukService produkService;
    private OrdersService ordersService;
    private List<Customer> customerList = new ArrayList<Customer>();
    private List<Produk> produkList = new ArrayList<Produk>();
    private SimpleDateFormat sdf = new SimpleDateFormat(CommonConstant.MYSQL_DATE_FORMAT);
    private SimpleDateFormat sdfForDisplay = new SimpleDateFormat(CommonConstant.DATE_FORMAT);
    private static ReportPenjualan myInstance;
    /**
     * Creates new form ReportPenjualan
     */
    public ReportPenjualan() {
        ApplicationContext appContext = ApplicationContextProvider.getInstance().getApplicationContext();
        customerService = (CustomerService) appContext.getBean("customerService");
        produkService = (ProdukService) appContext.getBean("produkService");
        ordersService = (OrdersService) appContext.getBean("ordersService");
        initComponents();
        produkRadioButton.addItemListener(this);
        customerRadioButton.addItemListener(this);
        tahunCombobox();
    }
    
    public static ReportPenjualan getInstance(){
        if(myInstance == null){
            myInstance = new ReportPenjualan();
        }
        return myInstance;
    }
    
    private void tahunCombobox(){
        int year = Calendar.getInstance().get(Calendar.YEAR);
        for(int i = 0 ;i < 5; i++){
            tahunComboBox.addItem(new ComboItem(String.valueOf(year+i),String.valueOf(year+i)));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseButtonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        produkRadioButton = new javax.swing.JRadioButton();
        customerRadioButton = new javax.swing.JRadioButton();
        chooseComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        reportPenjualanTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex)
            {
                return false; //Disallow the editing of any cell
            }
        };
        jLabel5 = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();
        printButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        tahunComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Report Penjualan");
        setPreferredSize(new java.awt.Dimension(1000, 600));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Daftar Faktur");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Pilih Berdasarkan :");

        chooseButtonGroup.add(produkRadioButton);
        produkRadioButton.setText("Produk");

        chooseButtonGroup.add(customerRadioButton);
        customerRadioButton.setText("Customer");
        customerRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerRadioButtonActionPerformed(evt);
            }
        });

        chooseComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        reportPenjualanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(reportPenjualanTable);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Total");

        totalTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalTextField.setEnabled(false);

        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        searchButton.setText("Lihat");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        tahunComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Tahun");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(336, 336, 336)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 650, Short.MAX_VALUE)
                        .addComponent(printButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(closeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(produkRadioButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(customerRadioButton))
                                    .addComponent(chooseComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 606, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tahunComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closeButton, printButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(tahunComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(produkRadioButton)
                        .addComponent(customerRadioButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchButton)
                    .addComponent(chooseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        ComboItem item = (ComboItem)chooseComboBox.getSelectedItem();
        ComboItem tahun = (ComboItem)tahunComboBox.getSelectedItem();
        String value = item.getValue();
        
        if(produkRadioButton.isSelected()){
            List<ReportPenjualanByProdukVo> voProduk = ordersService.getReportByProdukList(value, tahun.getValue());
            setTableReportByProduk(voProduk);
        }else{
            List<ReportPenjualanByCustomerVo> voCustomer = ordersService.getReportByCustomerList(Integer.valueOf(value), tahun.getValue());
            setTableReportByCustomer(voCustomer);
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        // TODO add your handling code here:
        ComboItem item = (ComboItem)chooseComboBox.getSelectedItem();
        ComboItem tahun = (ComboItem)tahunComboBox.getSelectedItem();
        String value = item.getValue();
        Locale locale = new Locale("id","ID");
        Map<String,Object> param = new HashMap<String, Object>();
        JasperReport jr = null;
        param.put("TAHUN", tahun.getValue());
        param.put(JRParameter.REPORT_LOCALE, locale);
        try {
            if(produkRadioButton.isSelected()){
                param.put("KODE_PRODUK", value);
//                jr = JasperCompileManager.compileReport("D:\\Report\\ReportPenjualanByProduk.jrxml");
                InputStream jasperStream = getClass().getResourceAsStream("/Report/ReportDaftarFaktur.jasper");
                jr = (JasperReport) JRLoader.loadObject(jasperStream);
            }
            else{
                param.put("ID_CUSTOMER", Integer.valueOf(value));
//                jr = JasperCompileManager.compileReport("D:\\Report\\ReportPenjualanByCustomer.jrxml");
                InputStream jasperStream = getClass().getResourceAsStream("/Report/ReportDaftarFakturCustomer.jasper");
                jr = (JasperReport) JRLoader.loadObject(jasperStream);
            }
            JasperPrint print = JasperFillManager.fillReport(jr, param, ordersService.getConnection());
            //            JasperViewer.viewReport(print, false);
            JasperPrintManager.printReport(print, true);
        } catch (JRException ex) {
            Logger.getLogger(ReportPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_printButtonActionPerformed

    private void customerRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerRadioButtonActionPerformed

    private void setTableReportByProduk(List<ReportPenjualanByProdukVo> vo){
        Object data[][] = new Object[vo.size()][10];
        int totalQuantity = 0;
        int x = 0;
        for (ReportPenjualanByProdukVo temp : vo) {
            data[x][0] = temp.getNamaCustomer();
            data[x][1] = sdfForDisplay.format(temp.getTglOrder());
            data[x][2] = temp.getQuantity();
            totalQuantity = totalQuantity+temp.getQuantity();
            ++x;
        }
        totalTextField.setText(""+totalQuantity);
        String[] judul = {"Nama", "Tgl Order", "Quantity"};
        reportPenjualanTable.setModel(new DefaultTableModel(data, judul));
        
        DefaultTableCellRenderer subTotalRightRenderer = new DefaultTableCellRenderer();
        subTotalRightRenderer.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        DefaultTableCellRenderer dateCenterRenderer = new DefaultTableCellRenderer();
        dateCenterRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        
        reportPenjualanTable.getColumn("Quantity").setCellRenderer(subTotalRightRenderer);
        
        // Auto Size for each column
//        TableColumnAdjuster tca = new TableColumnAdjuster(reportPenjualanTable);
//        tca.adjustColumns();
        
        jScrollPane1.setViewportView(reportPenjualanTable);
        reportPenjualanTable.setEnabled(true);
    }
    
    private void setTableReportByCustomer(List<ReportPenjualanByCustomerVo> vo){
        Object data[][] = new Object[vo.size()][10];
        int x = 0;
        Long total = 0l;
        for (ReportPenjualanByCustomerVo temp : vo) {
            data[x][0] = sdfForDisplay.format(temp.getTglOrder());
            data[x][1] = temp.getKodeProduk();
            data[x][2] = temp.getNamaProduk();
            data[x][3] = temp.getQuantity();
            data[x][4] = NumberFormat.getInstance().formatNumber(temp.getSubTotal());
            total = total + temp.getSubTotal();
            ++x;
        }
        
        totalTextField.setText(NumberFormat.getInstance().formatNumber(total));
        String[] judul = {"Tanggal Order","Kode Produk", "Nama Produk", "Quantity" , "Harga"};
        reportPenjualanTable.setModel(new DefaultTableModel(data, judul));
        
        DefaultTableCellRenderer subTotalRightRenderer = new DefaultTableCellRenderer();
        subTotalRightRenderer.setHorizontalAlignment(DefaultTableCellRenderer.RIGHT);
        DefaultTableCellRenderer dateCenterRenderer = new DefaultTableCellRenderer();
        dateCenterRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        
        reportPenjualanTable.getColumn("Quantity").setCellRenderer(subTotalRightRenderer);
        reportPenjualanTable.getColumn("Harga").setCellRenderer(subTotalRightRenderer);
        
        // Auto Size for each column
        TableColumnAdjuster tca = new TableColumnAdjuster(reportPenjualanTable);
        tca.adjustColumns();
        
        jScrollPane1.setViewportView(reportPenjualanTable);
        reportPenjualanTable.setEnabled(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup chooseButtonGroup;
    private javax.swing.JComboBox chooseComboBox;
    private javax.swing.JButton closeButton;
    private javax.swing.JRadioButton customerRadioButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printButton;
    private javax.swing.JRadioButton produkRadioButton;
    private javax.swing.JTable reportPenjualanTable;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox tahunComboBox;
    private javax.swing.JTextField totalTextField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent e) {
        
        if(e.getStateChange() == ItemEvent.SELECTED){
            if(produkRadioButton.isSelected()){
                chooseComboBox.removeAllItems();
                setComboBasedProduk();
            }else{
                chooseComboBox.removeAllItems();
                setComboBasedCustomer();
            }
        }
    }
    
    private void setComboBasedProduk(){
        produkList = produkService.getProdukList();
        
        for(Produk produk : produkList){
            chooseComboBox.addItem(new ComboItem(produk.getNamaProduk(),produk.getKodeProduk()));
        }
    }
    
    private void setComboBasedCustomer(){
        customerList = customerService.getCustomerList();
        
        for(Customer cus : customerList){
            chooseComboBox.addItem(new ComboItem(cus.getNama(), String.valueOf(cus.getCustomerId())));
        }
    }

    public CustomerService getCustomerService() {
        return customerService;
    }

    public void setCustomerService(CustomerService customerService) {
        this.customerService = customerService;
    }

    public ProdukService getProdukService() {
        return produkService;
    }

    public void setProdukService(ProdukService produkService) {
        this.produkService = produkService;
    }

    public OrdersService getOrdersService() {
        return ordersService;
    }

    public void setOrdersService(OrdersService ordersService) {
        this.ordersService = ordersService;
    }

    public List<Customer> getCustomerList() {
        return customerList;
    }

    public void setCustomerList(List<Customer> customerList) {
        this.customerList = customerList;
    }

    public List<Produk> getProdukList() {
        return produkList;
    }

    public void setProdukList(List<Produk> produkList) {
        this.produkList = produkList;
    }

    public static ReportPenjualan getMyInstance() {
        return myInstance;
    }

    public static void setMyInstance(ReportPenjualan myInstance) {
        ReportPenjualan.myInstance = myInstance;
    }
    
}
